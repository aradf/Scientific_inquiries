#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/imgproc.hpp>
#include <onnxruntime_cxx_api.h>

#include <iostream>

/*
 * cmake -DCMAKE_BUILD_TYPE=DEBUG ..
 * pkg-config --modversion opencv4
 * g++ main.cpp -o output `pkg-config --cflags --libs opencv4`
 * g++ main.cpp -g -o ./run_onnx -I/usr/local/include/opencv4 -L/usr/local/lib `pkg-config --cflags --libs opencv4` -std=c++14
 * g++ main.cpp -g -o ./run_onnx -lX11 -Iinclude/ -Llib/ -lonnxruntime -Wl,-rpath=./lib
 * g++ main.cpp -g -o ./run_onnx -I/usr/local/include/opencv4 -L/usr/local/lib `pkg-config --cflags --libs opencv4` -std=c++14 -lX11 -Iinclude/ -Llib/ -lonnxruntime -Wl,-rpath=./lib
 */

int main( int argc, char** argv )
{
  std::cout << "Number of arguments: " << argc << std::endl;
  
  if( argc != 2 )
  {
     std::cout <<  "Please enter image file .. " << std::endl ;
     return -1;
  }

  std::string image_file = argv[1];
  cv::Mat image;
  // image = cv::imread("./sample.jpg", cv::IMREAD_COLOR);
  image = cv::imread( image_file.c_str() , 
                      cv::IMREAD_COLOR);
  
  if(! image.data ) 
  {
     std::cout <<  "Could not open or find the image" << std::endl ;
     return -1;
  }
  
  cv::namedWindow( "Display window", 
                   cv::WINDOW_AUTOSIZE );
  cv::imshow( "Display window", 
              image );
  
  cv::waitKey(0);
  return 0;
}